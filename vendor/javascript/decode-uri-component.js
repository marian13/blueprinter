const e="%[a-f0-9]{2}";const o=new RegExp("("+e+")|([^%]+?)","gi");const t=new RegExp("("+e+")+","gi");function decodeComponents(e,o){try{return[decodeURIComponent(e.join(""))]}catch{}if(1===e.length)return e;o=o||1;const t=e.slice(0,o);const n=e.slice(o);return Array.prototype.concat.call([],decodeComponents(t),decodeComponents(n))}function decode(e){try{return decodeURIComponent(e)}catch{let t=e.match(o)||[];for(let n=1;n<t.length;n++){e=decodeComponents(t,n).join("");t=e.match(o)||[]}return e}}function customDecodeURIComponent(e){const o={"%FE%FF":"��","%FF%FE":"��"};let n=t.exec(e);while(n){try{o[n[0]]=decodeURIComponent(n[0])}catch{const e=decode(n[0]);e!==n[0]&&(o[n[0]]=e)}n=t.exec(e)}o["%C2"]="�";const c=Object.keys(o);for(const t of c)e=e.replace(new RegExp(t,"g"),o[t]);return e}function decodeUriComponent(e){if("string"!==typeof e)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return decodeURIComponent(e)}catch{return customDecodeURIComponent(e)}}export{decodeUriComponent as default};

